<?php
/**
 * Fluent Docs Shortcodes class.fluent-docs-shortcodes.php.
 *
 * The job of this class is to create the docs shortcodes.
 *
 * @package Fluent Docs
 * @since 1.0.0
 * @version 1.0.0
 */

/**
 * Fluent_Docs_Shortcodes
 */
class Fluent_Docs_Shortcodes extends Fluent_Docs_Base{

	/**
   * @var string $version Class version.
   */
  public $version = '1.0.0';

  /**
  * @var bool $assets_loaded. determine if the assets have been loaded via shortcodes.
  */
  private $assets_loaded = false;

  /**
    * Add shortcodes and register assets
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function __construct(){

    add_action('init', $this->provide('register_assets'));

  	add_shortcode('documentation', $this->provide('shortcode'));
  	add_shortcode('documentation_contents', $this->provide('contents'));
  	add_shortcode('documentation_content', $this->provide('content'));
    add_shortcode('documentation_online', $this->provide('online'));
    add_shortcode('documentation_offline', $this->provide('offline'));
  }

  /**
    * Register asset urls and add dynamic inline styles
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function register_assets(){
    wp_register_style('fluent-docs-css', FLUENT_DOCS_URL . 'assets/css/style.min.css', array('dashicons'), $this->version, 'all');
    wp_register_script('fluent-docs-js', FLUENT_DOCS_URL . 'assets/js/docs.min.js', array('jquery'), $this->version, true);
    $opts = get_option('fluent_docs');
      $custom_css = '
        .documentation-contents-sections > li > a{
          font-size: '.$opts['contents-font']['size'].'px;
          font-weight: '.$opts['contents-font']['weight'].';
          border-radius: '.$opts['contents-font']['border-radius'].'px;
          -moz-border-radius: '.$opts['contents-font']['border-radius'].'px;
          -webkit-border-radius: '.$opts['contents-font']['border-radius'].'px;
          color: '.$opts['contents-color']['normal'].';
          background: '.$opts['contents-color']['bg'].';
          padding: '.$opts['contents-padding']['top'].'px '.$opts['contents-padding']['right'].'px '.$opts['contents-padding']['bottom'].'px '.$opts['contents-padding']['left'].'px;
        }
        .documentation-contents-sections > li.active > a,
        .documentation-contents-sections > li:hover > a{
          color: '.$opts['contents-color']['hover'].';
          background: '.$opts['contents-color']['bg-hover'].';
        }
        .documentation-contents-sections .documentation-contents-section-articles > li > a{
          font-size: '.$opts['contents-font']['size'].'px;
          font-weight: '.$opts['contents-font']['weight'].';
          border-radius: '.$opts['contents-font']['border-radius'].'px;
          -moz-border-radius: '.$opts['contents-font']['border-radius'].'px;
          -webkit-border-radius: '.$opts['contents-font']['border-radius'].'px;
          color: '.$opts['contents-article-color']['normal'].';
          background: '.$opts['contents-article-color']['bg'].';
          padding: '.$opts['contents-article-padding']['top'].'px '.$opts['contents-article-padding']['right'].'px '.$opts['contents-article-padding']['bottom'].'px '.$opts['contents-article-padding']['left'].'px;
        }
        .documentation-contents-sections .documentation-contents-section-articles > li.active > a,
        .documentation-contents-sections .documentation-contents-section-articles > li:hover > a{
          color: '.$opts['contents-article-color']['hover'].';
          background: '.$opts['contents-article-color']['bg-hover'].';
        }
        .documentation-content-sections > div > h2{
          font-size: '.$opts['section-header']['size'].'px;
          font-weight: '.$opts['section-header']['weight'].';
          color: '.$opts['section-header']['color'].';
        }
        .documentation-content-sections > div > h2 > a.section-number{
          color: '.$opts['section-header']['link-color'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div > h3{
          font-size: '.$opts['article-header']['size'].'px;
          font-weight: '.$opts['article-header']['weight'].';
          color: '.$opts['article-header']['color'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div > h3 > a.article-number{
          color: '.$opts['article-header']['link-color'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div{
          color: '.$opts['font']['color'].';
          font-size: '.$opts['font']['size'].'px;
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p{
          color: '.$opts['font']['like-color'].';
          font-size: '.$opts['font']['like-size'].'px;
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .like,
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .like.disabled{
          background: '.$opts['like-color']['like'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .like:hover,
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .like.clicked{
          background: '.$opts['like-color']['like-hover'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .dislike,
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .dislike.disabled{
          background: '.$opts['like-color']['dislike'].';
        }
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .dislike:hover,
        .documentation-content-sections > div > .documentation-contents-section-articles > div .documentation-likes p .dislike.clicked{
          background: '.$opts['like-color']['dislike-hover'].';
        }
      '.$opts['css'];
      wp_add_inline_style( 'fluent-docs-css', $custom_css );
  }

  /**
    * Conditionally enqueue assets if they havent already been.
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  private function maybe_enqueue_assets(){
  	if(!$this->assets_loaded){
  		wp_enqueue_style('fluent-docs-css');
  		wp_enqueue_script('fluent-docs-js');
  		$this->assets_loaded = true;
  	}
  }

  /**
    * Main shortcode function, displays the contents and content.
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function shortcode($atts, $content){
  	$this->maybe_enqueue_assets();

  	global $post;

  	$atts = shortcode_atts( array(
 	      'id' => $post->ID,
 	      'remote' => false
      ), $atts );

  	return do_shortcode('<div class="documentation-main">[documentation_contents id="'.$atts['id'].'"][documentation_content id="'.$atts['id'].'"]<div class="clearfix"></div></div>');
  }

  /**
    * Contents list shortcode, contains mpdf markup
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function contents($atts, $content = ''){

  	$this->maybe_enqueue_assets();

  	global $post;

  	$atts = shortcode_atts( array(
 	      'id' => $post->ID,
 	      'remote' => false
      ), $atts );

  	$sections = get_children(array(
  		'post_parent' => $atts['id'],
  		'post_type' => 'documentation',
  		'post_status' => 'publish',
      'orderby' => 'menu_order',
      'order'  => 'ASC',
  	));

    $output = '<!--mpdf <tocpagebreak links="on" toc-bookmarkText="'.__('Table Of Contents'. $this->domain).'"/> mpdf-->';
    $output .= '<!--mpdf <pagefooter name="footer" content-left="'.get_the_title($post->ID).'" content-center="" content-right="{PAGENO}" line="on"/><setpagefooter name="footer" value="on" /> mpdf-->';
    	$output .= '<div class="documentation-contents-wrapper"'.((isset($_GET['media']) && $_GET['media'] == 'pdf') ? ' style="display: none;"' : '').'>';
	  	$output .= '<ul class="documentation-contents-sections">';
	  	$key = 1;
	  	foreach($sections as $section){
	  		$link = ($atts['remote']) ? get_permalink($atts['id']) : '';
	  		$link .= '#section-'.$section->ID;
	  		$output .= '<li class="section"><a href="'.$link.'">'.str_pad($key, 2, '0', STR_PAD_LEFT).' '.get_the_title($section->ID).'</a>';
	  			$output .= '<ul class="documentation-contents-section-articles">';
	  			$subkey = 1;
	  			$articles = get_children(array(
			  		'post_parent' => $section->ID,
			  		'post_type' => 'documentation',
			  		'post_status' => 'publish',
            'orderby' => 'menu_order',
            'order'  => 'ASC',
			  	));
	  			foreach($articles as $article){
	  				$link = ($atts['remote']) ? get_permalink($atts['id']) : '';
	  				$link .= '#article-'.$article->ID;
	  				$output .= '<li class="article"><a href="'.$link.'">'.str_pad($key, 2, '0', STR_PAD_LEFT).'.'.$subkey.' '.get_the_title($article->ID).'</a></li>';
	  				$subkey++;
	  			}
	  			$output .= '</ul>';
	  		$output .= '</li>';
	  		$key++;
	  	}
	  	$output .= '</ul>';
      if(!isset($_GET['media'])){
        $output .= '<div class="documentation-actions"><a href="'.wp_nonce_url(add_query_arg(array('media' => 'print'), get_permalink($atts['id'])), 'documentation-actions').'" title="'.__('Print Documentation', $this->domain).'"><span class="dashicons dashicons-media-text"></span> '.__('Print Documentation', $this->domain).'</a><br/><a href="'.wp_nonce_url(add_query_arg(array('media' => 'pdf'), get_permalink($atts['id'])), 'documentation-actions').'" title="'.__('Download Pdf', $this->domain).'"><span class="dashicons dashicons-download"></span> '.__('Download Pdf', $this->domain).'</a></div>';
      }
  	$output .= '</div>';

  	return $output;
  }

  /**
    * Content shortcode, contains mpdf markup
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function content($atts, $content = ''){

  	$this->maybe_enqueue_assets();

  	global $post;

  	$atts = shortcode_atts( array(
 	      'id' => $post->ID,
        'remote' => false
      ), $atts );

  	$sections = get_children(array(
  		'post_parent' => $atts['id'],
  		'post_type' => 'documentation',
  		'post_status' => 'publish',
      'orderby' => 'menu_order',
      'order'  => 'ASC',
  	));

    $currpost = $post;
    $post = get_post($atts['id']);
    setup_postdata($post);
    $mainlink = ($atts['remote']) ? get_permalink($currpost->ID) : '';

  	$output = '<div class="documentation-content-wrapper">';
	  	$output .= '<div class="documentation-content-sections">';
	  	$key = 1;
	  	foreach($sections as $section){
        $post = $section;
        setup_postdata($post);
	  		$link = 'section-'.$section->ID;
	  		$output .= '<div id="'.$link.'"><h2><a href="'.$mainlink.'#'.$link.'" class="section-number" title="'.__('Link to section', $this->domain).'">'.str_pad($key, 2, '0', STR_PAD_LEFT).'</a> '.get_the_title($section->ID).' <a href="#" title="'.__('To Top', $this->domain).'" class="top"><span class="dashicons dashicons-arrow-up-alt2"></span></a><!--mpdf <tocentry content="'.htmlspecialchars(str_pad($key, 2, '0', STR_PAD_LEFT).' '.get_the_title($section->ID), ENT_QUOTES).'" level="0"/> mpdf--></h2><hr/>'.apply_filters('the_content', get_the_content());
	  			$output .= '<div class="documentation-contents-section-articles">';
	  			$subkey = 1;
	  			$articles = get_children(array(
			  		'post_parent' => $section->ID,
			  		'post_type' => 'documentation',
			  		'post_status' => 'publish',
            'orderby' => 'menu_order',
            'order'  => 'ASC',
			  	));
	  			foreach($articles as $article){
            $post = $article;
            setup_postdata($post);
	  				$link = 'article-'.$article->ID;
	  				$output .= '<div id="'.$link.'"><h3><a href="'.$mainlink.'#'.$link.'" class="article-number" title="'.__('Link to article', $this->domain).'">'.str_pad($key, 2, '0', STR_PAD_LEFT).'.'.$subkey.'</a> '.get_the_title($article->ID).' <a href="#" title="'.__('To Top', $this->domain).'" class="top"><span class="dashicons dashicons-arrow-up-alt2"></span></a><!--mpdf <tocentry content="'.htmlspecialchars(str_pad($key, 2, '0', STR_PAD_LEFT).'.'.$subkey.' '.get_the_title($article->ID), ENT_QUOTES).'" level="1" /> mpdf--></h3><hr/>'.apply_filters('the_content', get_the_content()).'</div>';
	  				$subkey++;
	  			}
	  			$output .= '</div>';
	  		$output .= '</div>';
        $output .= '<!--mpdf <pagebreak /> mpdf-->';
	  		$key++;
	  	}
	  	$output .= '</div>';
  	$output .= '</div>';
    wp_reset_postdata();
  	return $output;
  }

  /**
    * Conditionallu displays content online
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function online($atts = array(), $content = ''){
    if(isset($_GET['media'])){
      return '';
    }else{
      return do_shortcode($content);
    }
  }

  /**
    * Conditionallu displays content offline
    *
    * @since 1.0.0
    *
    * @return none
    *
    */
  public function offline($atts = array(), $content = ''){
    if(!isset($_GET['media'])){
      return '';
    }else{
      return do_shortcode($content);
    }
  }

}
